{"version":3,"sources":["webpack:///./src/views/RowsTransition.vue?63fa","webpack:///./src/views/RowsTransition.vue?3418","webpack:///src/views/RowsTransition.vue","webpack:///./src/views/RowsTransition.vue?d922","webpack:///./src/views/RowsTransition.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","directives","name","rawName","value","expression","attrs","maxChars","domProps","on","$event","limitChars","target","composing","inputString","encryptString","decryptString","outputString","uploadFile","encodeURIComponent","currentTime","staticRenderFns","component"],"mappings":"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","file":"js/about.ad301744.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RowsTransition.vue?vue&type=style&index=0&id=ccf1c6ba&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RowsTransition.vue?vue&type=style&index=0&id=ccf1c6ba&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rows-transition\"},[_c('h1',[_vm._v(\"Rows Transition\")]),_c('section',{staticClass:\"section\"},[_c('div',{staticClass:\"section__Label\"},[_vm._v(\"Text Input:\")]),_c('div',{staticClass:\"section__Item\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputString),expression:\"inputString\"}],attrs:{\"placeholder\":(\"Max \" + _vm.maxChars + \" characters and only english characters are acceptable...\"),\"maxlength\":_vm.maxChars,\"name\":\"rows-transition-input\",\"cols\":\"30\",\"rows\":\"10\"},domProps:{\"value\":(_vm.inputString)},on:{\"keypress\":function($event){return _vm.limitChars($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.inputString=$event.target.value}}})]),_c('div',{staticClass:\"section__Item\"},[_c('button',{staticClass:\"button\",on:{\"click\":_vm.encryptString}},[_vm._v(\"Encrypt Text\")]),_c('button',{staticClass:\"button\",on:{\"click\":_vm.decryptString}},[_vm._v(\"Decrypt Text\")])]),_c('div',{staticClass:\"section__Label\"},[_vm._v(\"Text Output:\")]),_c('div',{staticClass:\"section__Item\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.outputString),expression:\"outputString\"}],attrs:{\"placeholder\":\"There will be output text. If you run decrypt text will be without spaces.\",\"cols\":\"30\",\"rows\":\"10\"},domProps:{\"value\":(_vm.outputString)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.outputString=$event.target.value}}})])]),_c('div',{staticClass:\"section__Item\"},[_c('label',{staticClass:\"button\"},[_vm._v(\" Upload .txt file to encrypt \"),_c('input',{staticClass:\"nativeFileInput\",attrs:{\"type\":\"file\"},on:{\"change\":_vm.uploadFile}})]),_c('a',{staticClass:\"button\",attrs:{\"href\":(\"data:text/plain;charset=utf-8,\" + (encodeURIComponent(_vm.outputString))),\"download\":(\"encrypted_\" + _vm.currentTime + \".txt\")}},[_vm._v(\" Save decrypted text as .txt file \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"rows-transition\">\r\n    <h1>Rows Transition</h1>\r\n    <section class=\"section\">\r\n      <div class=\"section__Label\">Text Input:</div>\r\n      <div class=\"section__Item\">\r\n        <textarea\r\n                :placeholder=\"`Max ${maxChars} characters and only english characters are acceptable...`\"\r\n                :maxlength=\"maxChars\" name=\"rows-transition-input\"\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                v-model=\"inputString\"\r\n                @keypress=\"limitChars($event)\">\r\n        </textarea>\r\n      </div>\r\n      <div class=\"section__Item\">\r\n        <button class=\"button\" @click=\"encryptString\">Encrypt Text</button>\r\n        <button class=\"button\" @click=\"decryptString\">Decrypt Text</button>\r\n      </div>\r\n      <div class=\"section__Label\">Text Output:</div>\r\n      <div class=\"section__Item\">\r\n        <textarea\r\n                placeholder=\"There will be output text. If you run decrypt text will be without spaces.\"\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                v-model=\"outputString\">\r\n        </textarea>\r\n      </div>\r\n    </section>\r\n    <div class=\"section__Item\">\r\n      <label class=\"button\">\r\n        Upload .txt file to encrypt\r\n        <input class=\"nativeFileInput\"\r\n               type=\"file\"\r\n               @change=\"uploadFile\"\r\n        >\r\n      </label>\r\n      <a  class=\"button\"\r\n          :href=\"`data:text/plain;charset=utf-8,${encodeURIComponent(outputString)}`\"\r\n          :download=\"`encrypted_${currentTime}.txt`\"\r\n      >\r\n        Save decrypted text as .txt file\r\n      </a>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n  .nativeFileInput {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    position: absolute;\r\n    z-index: -1;\r\n  }\r\n</style>\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        inputString: \"\",\r\n        outputString: \"\",\r\n        matrix: [],\r\n        cipherKey: {\r\n          colsArr: [4,8,1,7,3,6,5,2],\r\n          colsAmount: 8,\r\n          rowsAmount: 400\r\n        },\r\n      };\r\n    },\r\n    computed: {\r\n      maxChars() {\r\n        return this.cipherKey.colsAmount * this.cipherKey.rowsAmount;\r\n      },\r\n      inputToEncryptString() {\r\n        return this.inputString.toString()\r\n                .split(\" \")\r\n                .join(\"+\")\r\n                .trim();\r\n      },\r\n      inputToDecryptString() {\r\n        return this.inputString.toString()\r\n                .split(\"+\")\r\n                .join(\" \");\r\n      },\r\n      currentTime() {\r\n        let today = new Date();\r\n        let date = `${today.getFullYear()}-${(today.getMonth()+1)}-${today.getDate()}`;\r\n        let time = `${today.getHours()}${today.getMinutes()}${today.getSeconds()}`;\r\n        return `${date}_${time}`;\r\n      }\r\n    },\r\n    methods: {\r\n      limitChars: function (e) {\r\n        let char = e.key;\r\n        if (!/^[a-z\\d .,:+]*$/i.test(char)) {\r\n          e.preventDefault()\r\n        }\r\n      },\r\n      createMatrix() {\r\n        this.matrix = [];\r\n        for (let i = 0; i < this.cipherKey.rowsAmount; i++) {\r\n          this.matrix[i] = [];\r\n          for (let x = 0; x < this.cipherKey.colsAmount; x++) {\r\n            this.matrix[i][x] = null;\r\n          }\r\n        }\r\n      },\r\n      encryptString() {\r\n        let char = 0;\r\n        this.createMatrix();\r\n\r\n        // fill encryption matrix by chars\r\n        for (let i = 0; i < this.cipherKey.rowsAmount; i++) {\r\n          for (let x = 0; x < this.cipherKey.colsAmount; x++) {\r\n            if(this.inputToEncryptString[char]) {\r\n              this.matrix[i][x] = this.inputToEncryptString[char];\r\n            }\r\n            char++;\r\n          }\r\n        }\r\n\r\n        let encryptedString = '';\r\n        for (let x = 0; x < this.cipherKey.colsAmount; x++) {\r\n          for (let i = 0; i < this.cipherKey.rowsAmount; i++) {\r\n            if(this.matrix[i][this.cipherKey.colsArr[x]-1]) {\r\n              encryptedString = `${encryptedString}${this.matrix[i][this.cipherKey.colsArr[x]-1]}`;\r\n            }\r\n          }\r\n        }\r\n\r\n        this.outputString = encryptedString;\r\n      },\r\n      decryptString() {\r\n        let colsAmounts = Math.floor(this.inputToDecryptString.length/this.cipherKey.colsAmount);\r\n        let modCols = this.inputToDecryptString.length%this.cipherKey.colsAmount;\r\n        let decryptedString = '';\r\n        let char = 0;\r\n        this.createMatrix();\r\n\r\n        for(let i = 0; i < this.cipherKey.colsAmount; i++){\r\n          let rowsAmount = this.cipherKey.colsArr[i] <= modCols ? colsAmounts+1 : colsAmounts;\r\n          for(let x = 0; x < rowsAmount; x++){\r\n            if(this.inputToDecryptString[char]) {\r\n              this.matrix[x][this.cipherKey.colsArr[i]-1] = this.inputToDecryptString[char];\r\n              char++;\r\n            }\r\n          }\r\n        }\r\n        \r\n        decryptedString =  this.matrix\r\n                .map(e => e.join(\"\"))\r\n                .join(\"\");\r\n\r\n        this.outputString = decryptedString;\r\n      },\r\n      uploadFile(e) {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = e => this.$emit(\"load\",\r\n                this.inputString =  e.target.result);\r\n      }\r\n    }\r\n  };\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RowsTransition.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RowsTransition.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RowsTransition.vue?vue&type=template&id=ccf1c6ba&scoped=true&\"\nimport script from \"./RowsTransition.vue?vue&type=script&lang=js&\"\nexport * from \"./RowsTransition.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RowsTransition.vue?vue&type=style&index=0&id=ccf1c6ba&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ccf1c6ba\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}